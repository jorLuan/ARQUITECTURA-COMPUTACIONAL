

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 10 14:08:13 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  000C12                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _keypad
    64  000C12  37                 	db	55
    65  000C13  38                 	db	56
    66  000C14  39                 	db	57
    67  000C15  2F                 	db	47
    68  000C16  34                 	db	52
    69  000C17  35                 	db	53
    70  000C18  36                 	db	54
    71  000C19  2A                 	db	42
    72  000C1A  31                 	db	49
    73  000C1B  32                 	db	50
    74  000C1C  33                 	db	51
    75  000C1D  2D                 	db	45
    76  000C1E  20                 	db	32
    77  000C1F  30                 	db	48
    78  000C20  3D                 	db	61
    79  000C21  2B                 	db	43
    80                           
    81                           ;initializer for _password
    82  000C22  32                 	db	50
    83  000C23  30                 	db	48
    84  000C24  32                 	db	50
    85  000C25  31                 	db	49
    86  000C26  00                 	db	0
    87                           
    88                           	psect	smallconst
    89  000800                     __psmallconst:
    90                           	callstack 0
    91  000800  00                 	db	0
    92  000801                     Keypad_Key_Press@F3225:
    93                           	callstack 0
    94  000801  37                 	db	55
    95  000802  38                 	db	56
    96  000803  39                 	db	57
    97  000804  2F                 	db	47
    98  000805  34                 	db	52
    99  000806  35                 	db	53
   100  000807  36                 	db	54
   101  000808  2A                 	db	42
   102  000809  31                 	db	49
   103  00080A  32                 	db	50
   104  00080B  33                 	db	51
   105  00080C  2D                 	db	45
   106  00080D  0D                 	db	13
   107  00080E  30                 	db	48
   108  00080F  3D                 	db	61
   109  000810  2B                 	db	43
   110  000811  00                 	db	0
   111  000812                     __end_ofKeypad_Key_Press@F3225:
   112                           	callstack 0
   113  0000                     _PORTD	set	3971
   114  0000                     _LATD1	set	31841
   115  0000                     _LATD0	set	31840
   116  0000                     _PORTB	set	3969
   117  0000                     _PORTDbits	set	3971
   118  0000                     _LATD	set	3980
   119  0000                     _TRISD	set	3989
   120  0000                     _OSCCON	set	4051
   121  0000                     _TRISB	set	3987
   122  0000                     _RBPU	set	32655
   123  0000                     _LATB	set	3978
   124  000812                     STR_1:
   125  000812  50                 	db	80	;'P'
   126  000813  72                 	db	114	;'r'
   127  000814  65                 	db	101	;'e'
   128  000815  73                 	db	115	;'s'
   129  000816  73                 	db	115	;'s'
   130  000817  20                 	db	32
   131  000818  61                 	db	97	;'a'
   132  000819  20                 	db	32
   133  00081A  4B                 	db	75	;'K'
   134  00081B  65                 	db	101	;'e'
   135  00081C  79                 	db	121	;'y'
   136  00081D  00                 	db	0
   137  00081E  00                 	db	0	; dummy byte at the end
   138  0000                     
   139                           ; #config settings
   140                           
   141                           	psect	cinit
   142  000B6E                     __pcinit:
   143                           	callstack 0
   144  000B6E                     start_initialization:
   145                           	callstack 0
   146  000B6E                     __initialization:
   147                           	callstack 0
   148                           
   149                           ; Initialize objects allocated to COMRAM (21 bytes)
   150                           ; load TBLPTR registers with __pidataCOMRAM
   151  000B6E  0E12               	movlw	low __pidataCOMRAM
   152  000B70  6EF6               	movwf	tblptrl,c
   153  000B72  0E0C               	movlw	high __pidataCOMRAM
   154  000B74  6EF7               	movwf	tblptrh,c
   155  000B76  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   156  000B78  6EF8               	movwf	tblptru,c
   157  000B7A  EE00  F001         	lfsr	0,__pdataCOMRAM
   158  000B7E  EE10 F015          	lfsr	1,21
   159  000B82                     copy_data0:
   160  000B82  0009               	tblrd		*+
   161  000B84  CFF5 FFEE          	movff	tablat,postinc0
   162  000B88  50E5               	movf	postdec1,w,c
   163  000B8A  50E1               	movf	fsr1l,w,c
   164  000B8C  E1FA               	bnz	copy_data0
   165                           
   166                           ; Clear objects allocated to COMRAM (9 bytes)
   167  000B8E  EE00  F020         	lfsr	0,__pbssCOMRAM
   168  000B92  0E09               	movlw	9
   169  000B94                     clear_0:
   170  000B94  6AEE               	clrf	postinc0,c
   171  000B96  06E8               	decf	wreg,f,c
   172  000B98  E1FD               	bnz	clear_0
   173  000B9A                     end_of_initialization:
   174                           	callstack 0
   175  000B9A                     __end_of__initialization:
   176                           	callstack 0
   177  000B9A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   178  000B9C  6EF8               	movwf	tblptru,c
   179  000B9E  0E08               	movlw	high __Lsmallconst
   180  000BA0  6EF7               	movwf	tblptrh,c
   181  000BA2  0100               	movlb	0
   182  000BA4  EF73  F005         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185  000020                     __pbssCOMRAM:
   186                           	callstack 0
   187  000020                     _pass_user:
   188                           	callstack 0
   189  000020                     	ds	5
   190  000025                     _idx:
   191                           	callstack 0
   192  000025                     	ds	1
   193  000026                     _temp_col:
   194                           	callstack 0
   195  000026                     	ds	1
   196  000027                     _rowloc:
   197                           	callstack 0
   198  000027                     	ds	1
   199  000028                     _col_loc:
   200                           	callstack 0
   201  000028                     	ds	1
   202                           
   203                           	psect	dataCOMRAM
   204  000001                     __pdataCOMRAM:
   205                           	callstack 0
   206  000001                     _keypad:
   207                           	callstack 0
   208  000001                     	ds	16
   209  000011                     _password:
   210                           	callstack 0
   211  000011                     	ds	5
   212                           
   213                           	psect	cstackCOMRAM
   214  000016                     __pcstackCOMRAM:
   215                           	callstack 0
   216  000016                     ??_LCD_Command:
   217  000016                     ??_keyfind:
   218  000016                     ??_LCD_Char:
   219  000016                     
   220                           ; 1 bytes @ 0x0
   221  000016                     	ds	1
   222  000017                     LCD_Command@cmd:
   223                           	callstack 0
   224  000017                     LCD_Char@dat:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x1
   228  000017                     	ds	1
   229  000018                     ??_LCD_Init:
   230  000018                     LCD_String@msg:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x2
   234  000018                     	ds	2
   235  00001A                     LCD_String_xy@pos:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x4
   239  00001A                     	ds	1
   240  00001B                     LCD_String_xy@msg:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x5
   244  00001B                     	ds	2
   245  00001D                     LCD_String_xy@row:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x7
   249  00001D                     	ds	1
   250  00001E                     LCD_String_xy@location:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x8
   254  00001E                     	ds	1
   255  00001F                     main@key:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x9
   259  00001F                     	ds	1
   260                           
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 46 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;  key             1    9[COMRAM] unsigned char 
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   280 ;;      Params:         0       0       0       0       0       0       0       0       0
   281 ;;      Locals:         1       0       0       0       0       0       0       0       0
   282 ;;      Temps:          0       0       0       0       0       0       0       0       0
   283 ;;      Totals:         1       0       0       0       0       0       0       0       0
   284 ;;Total ram usage:        1 bytes
   285 ;; Hardware stack levels required when called: 3
   286 ;; This function calls:
   287 ;;		_LCD_Char
   288 ;;		_LCD_Command
   289 ;;		_LCD_Init
   290 ;;		_LCD_String_xy
   291 ;;		_keyfind
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text0
   298  000AE6                     __ptext0:
   299                           	callstack 0
   300  000AE6                     _main:
   301                           	callstack 28
   302  000AE6                     
   303                           ;main.c: 48:     char key;;main.c: 49:     OSCCON = 0x72;
   304  000AE6  0E72               	movlw	114
   305  000AE8  6ED3               	movwf	211,c	;volatile
   306  000AEA                     
   307                           ;main.c: 51:     RBPU=0;
   308  000AEA  9EF1               	bcf	4081,7,c	;volatile
   309  000AEC                     
   310                           ;main.c: 52:     LCD_Init();
   311  000AEC  ECEF  F005         	call	_LCD_Init	;wreg free
   312  000AF0                     
   313                           ;main.c: 53:     LCD_String_xy(0,0,"Press a Key");
   314  000AF0  0E00               	movlw	0
   315  000AF2  6E1A               	movwf	LCD_String_xy@pos^0,c
   316  000AF4  0E12               	movlw	low STR_1
   317  000AF6  6E1B               	movwf	LCD_String_xy@msg^0,c
   318  000AF8  0E08               	movlw	high STR_1
   319  000AFA  6E1C               	movwf	(LCD_String_xy@msg+1)^0,c
   320  000AFC  0E00               	movlw	0
   321  000AFE  EC97  F005         	call	_LCD_String_xy
   322  000B02                     
   323                           ;main.c: 54:     LCD_Command(0xC0);
   324  000B02  0EC0               	movlw	192
   325  000B04  EC4B  F005         	call	_LCD_Command
   326  000B08                     l1087:
   327                           
   328                           ;main.c: 58:             key = keyfind();
   329  000B08  EC10  F004         	call	_keyfind	;wreg free
   330  000B0C  6E1F               	movwf	main@key^0,c
   331  000B0E                     
   332                           ;main.c: 59:             LCD_Char('*');
   333  000B0E  0E2A               	movlw	42
   334  000B10  EC23  F005         	call	_LCD_Char
   335  000B14                     
   336                           ;main.c: 60:             pass_user[idx++] = key;
   337  000B14  0E20               	movlw	low _pass_user
   338  000B16  2425               	addwf	_idx^0,w,c
   339  000B18  6ED9               	movwf	fsr2l,c
   340  000B1A  6ADA               	clrf	fsr2h,c
   341  000B1C  0E00               	movlw	high _pass_user
   342  000B1E  22DA               	addwfc	fsr2h,f,c
   343  000B20  C01F  FFDF         	movff	main@key,indf2
   344  000B24  2A25               	incf	_idx^0,f,c
   345  000B26  EF84  F005         	goto	l1087
   346  000B2A  EF00  F000         	goto	start
   347  000B2E                     __end_of_main:
   348                           	callstack 0
   349                           
   350 ;; *************** function _keyfind *****************
   351 ;; Defined at:
   352 ;;		line 92 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  temp1           1    0        unsigned char 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      unsigned char 
   359 ;; Registers used:
   360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   366 ;;      Params:         0       0       0       0       0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0       0       0       0       0
   368 ;;      Temps:          1       0       0       0       0       0       0       0       0
   369 ;;      Totals:         1       0       0       0       0       0       0       0       0
   370 ;;Total ram usage:        1 bytes
   371 ;; Hardware stack levels used: 1
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text1
   380  000820                     __ptext1:
   381                           	callstack 0
   382  000820                     _keyfind:
   383                           	callstack 30
   384  000820                     
   385                           ;main.c: 95:     TRISB = 0xf0;
   386  000820  0EF0               	movlw	240
   387  000822  6E93               	movwf	147,c	;volatile
   388                           
   389                           ;main.c: 96:     unsigned char temp1;;main.c: 98:         LATB = 0xf0;
   390  000824  0EF0               	movlw	240
   391  000826  6E8A               	movwf	138,c	;volatile
   392  000828                     l893:
   393                           
   394                           ;main.c: 102:         {;main.c: 104:             col_loc = PORTB & 0xf0;
   395  000828  5081               	movf	129,w,c	;volatile
   396  00082A  0BF0               	andlw	240
   397  00082C  6E28               	movwf	_col_loc^0,c
   398  00082E                     
   399                           ;main.c: 106:         }while(col_loc!=0xf0);
   400  00082E  0EF0               	movlw	240
   401  000830  1828               	xorwf	_col_loc^0,w,c
   402  000832  A4D8               	btfss	status,2,c
   403  000834  EF1E  F004         	goto	u31
   404  000838  EF20  F004         	goto	u30
   405  00083C                     u31:
   406  00083C  EF14  F004         	goto	l893
   407  000840                     u30:
   408  000840                     
   409                           ;main.c: 107:          col_loc = PORTB & 0xf0;
   410  000840  5081               	movf	129,w,c	;volatile
   411  000842  0BF0               	andlw	240
   412  000844  6E28               	movwf	_col_loc^0,c
   413                           
   414                           ;main.c: 108:       }while(col_loc!=0xf0);
   415  000846  0EF0               	movlw	240
   416  000848  1828               	xorwf	_col_loc^0,w,c
   417  00084A  A4D8               	btfss	status,2,c
   418  00084C  EF2A  F004         	goto	u41
   419  000850  EF2C  F004         	goto	u40
   420  000854                     u41:
   421  000854  EF14  F004         	goto	l893
   422  000858                     u40:
   423  000858                     
   424                           ;main.c: 110:       _delay((unsigned long)((50)*(8000000/4000.0)));
   425  000858  0E82               	movlw	130
   426  00085A  6E16               	movwf	??_keyfind^0,c
   427  00085C  0EDE               	movlw	222
   428  00085E                     u267:
   429  00085E  2EE8               	decfsz	wreg,f,c
   430  000860  D7FE               	bra	u267
   431  000862  2E16               	decfsz	??_keyfind^0,f,c
   432  000864  D7FC               	bra	u267
   433  000866                     
   434                           ;main.c: 111:         LATB = 0xf0;
   435  000866  0EF0               	movlw	240
   436  000868  6E8A               	movwf	138,c	;volatile
   437  00086A                     l903:
   438                           
   439                           ;main.c: 115:             {;main.c: 117:                 col_loc = PORTB & 0xf0;
   440  00086A  5081               	movf	129,w,c	;volatile
   441  00086C  0BF0               	andlw	240
   442  00086E  6E28               	movwf	_col_loc^0,c
   443  000870                     
   444                           ;main.c: 118:             }while(col_loc==0xf0);
   445  000870  0EF0               	movlw	240
   446  000872  1828               	xorwf	_col_loc^0,w,c
   447  000874  B4D8               	btfsc	status,2,c
   448  000876  EF3F  F004         	goto	u51
   449  00087A  EF41  F004         	goto	u50
   450  00087E                     u51:
   451  00087E  EF35  F004         	goto	l903
   452  000882                     u50:
   453  000882                     
   454                           ;main.c: 119:          col_loc = PORTB & 0xf0;
   455  000882  5081               	movf	129,w,c	;volatile
   456  000884  0BF0               	andlw	240
   457  000886  6E28               	movwf	_col_loc^0,c
   458                           
   459                           ;main.c: 120:         }while(col_loc==0xf0);
   460  000888  0EF0               	movlw	240
   461  00088A  1828               	xorwf	_col_loc^0,w,c
   462  00088C  B4D8               	btfsc	status,2,c
   463  00088E  EF4B  F004         	goto	u61
   464  000892  EF4D  F004         	goto	u60
   465  000896                     u61:
   466  000896  EF35  F004         	goto	l903
   467  00089A                     u60:
   468  00089A                     
   469                           ;main.c: 122:         _delay((unsigned long)((20)*(8000000/4000.0)));
   470  00089A  0E34               	movlw	52
   471  00089C  6E16               	movwf	??_keyfind^0,c
   472  00089E  0EF2               	movlw	242
   473  0008A0                     u277:
   474  0008A0  2EE8               	decfsz	wreg,f,c
   475  0008A2  D7FE               	bra	u277
   476  0008A4  2E16               	decfsz	??_keyfind^0,f,c
   477  0008A6  D7FC               	bra	u277
   478  0008A8                     
   479                           ;main.c: 124:         col_loc = PORTB & 0xf0;
   480  0008A8  5081               	movf	129,w,c	;volatile
   481  0008AA  0BF0               	andlw	240
   482  0008AC  6E28               	movwf	_col_loc^0,c
   483  0008AE                     l913:
   484                           
   485                           ;main.c: 129:     {;main.c: 130:         LATB = 0xfe;
   486  0008AE  0EFE               	movlw	254
   487  0008B0  6E8A               	movwf	138,c	;volatile
   488  0008B2                     
   489                           ;main.c: 131:         col_loc = PORTB & 0xf0;
   490  0008B2  5081               	movf	129,w,c	;volatile
   491  0008B4  0BF0               	andlw	240
   492  0008B6  6E28               	movwf	_col_loc^0,c
   493  0008B8                     
   494                           ;main.c: 132:         temp_col=col_loc;
   495  0008B8  C028  F026         	movff	_col_loc,_temp_col
   496  0008BC                     
   497                           ;main.c: 133:         if(col_loc!=0xf0)
   498  0008BC  0EF0               	movlw	240
   499  0008BE  1828               	xorwf	_col_loc^0,w,c
   500  0008C0  B4D8               	btfsc	status,2,c
   501  0008C2  EF65  F004         	goto	u71
   502  0008C6  EF67  F004         	goto	u70
   503  0008CA                     u71:
   504  0008CA  EF79  F004         	goto	l925
   505  0008CE                     u70:
   506  0008CE                     
   507                           ;main.c: 134:         {;main.c: 135:             rowloc=0;
   508  0008CE  0E00               	movlw	0
   509  0008D0  6E27               	movwf	_rowloc^0,c
   510                           
   511                           ;main.c: 136:             while(temp_col!=0xf0)
   512  0008D2  EF6E  F004         	goto	l113
   513  0008D6                     l923:
   514                           
   515                           ;main.c: 137:             {;main.c: 138:                 temp_col = PORTB & 0xf0;
   516  0008D6  5081               	movf	129,w,c	;volatile
   517  0008D8  0BF0               	andlw	240
   518  0008DA  6E26               	movwf	_temp_col^0,c
   519  0008DC                     l113:
   520                           
   521                           ;main.c: 136:             while(temp_col!=0xf0)
   522  0008DC  0EF0               	movlw	240
   523  0008DE  1826               	xorwf	_temp_col^0,w,c
   524  0008E0  A4D8               	btfss	status,2,c
   525  0008E2  EF75  F004         	goto	u81
   526  0008E6  EF77  F004         	goto	u80
   527  0008EA                     u81:
   528  0008EA  EF6B  F004         	goto	l923
   529  0008EE                     u80:
   530  0008EE  EFDD  F004         	goto	l961
   531  0008F2                     l925:
   532                           
   533                           ;main.c: 143:         LATB = 0xfd;
   534  0008F2  0EFD               	movlw	253
   535  0008F4  6E8A               	movwf	138,c	;volatile
   536  0008F6                     
   537                           ;main.c: 144:         col_loc = PORTB & 0xf0;
   538  0008F6  5081               	movf	129,w,c	;volatile
   539  0008F8  0BF0               	andlw	240
   540  0008FA  6E28               	movwf	_col_loc^0,c
   541  0008FC                     
   542                           ;main.c: 145:         temp_col=col_loc;
   543  0008FC  C028  F026         	movff	_col_loc,_temp_col
   544  000900                     
   545                           ;main.c: 146:         if(col_loc!=0xf0)
   546  000900  0EF0               	movlw	240
   547  000902  1828               	xorwf	_col_loc^0,w,c
   548  000904  B4D8               	btfsc	status,2,c
   549  000906  EF87  F004         	goto	u91
   550  00090A  EF89  F004         	goto	u90
   551  00090E                     u91:
   552  00090E  EF9B  F004         	goto	l937
   553  000912                     u90:
   554  000912                     
   555                           ;main.c: 147:         {;main.c: 148:             rowloc=1;
   556  000912  0E01               	movlw	1
   557  000914  6E27               	movwf	_rowloc^0,c
   558                           
   559                           ;main.c: 149:             while(temp_col!=0xf0)
   560  000916  EF90  F004         	goto	l118
   561  00091A                     l935:
   562                           
   563                           ;main.c: 150:             {;main.c: 151:                 temp_col = PORTB & 0xf0;
   564  00091A  5081               	movf	129,w,c	;volatile
   565  00091C  0BF0               	andlw	240
   566  00091E  6E26               	movwf	_temp_col^0,c
   567  000920                     l118:
   568                           
   569                           ;main.c: 149:             while(temp_col!=0xf0)
   570  000920  0EF0               	movlw	240
   571  000922  1826               	xorwf	_temp_col^0,w,c
   572  000924  A4D8               	btfss	status,2,c
   573  000926  EF97  F004         	goto	u101
   574  00092A  EF99  F004         	goto	u100
   575  00092E                     u101:
   576  00092E  EF8D  F004         	goto	l935
   577  000932                     u100:
   578  000932  EFDD  F004         	goto	l961
   579  000936                     l937:
   580                           
   581                           ;main.c: 156:         LATB = 0xfb;
   582  000936  0EFB               	movlw	251
   583  000938  6E8A               	movwf	138,c	;volatile
   584  00093A                     
   585                           ;main.c: 157:         col_loc = PORTB & 0xf0;
   586  00093A  5081               	movf	129,w,c	;volatile
   587  00093C  0BF0               	andlw	240
   588  00093E  6E28               	movwf	_col_loc^0,c
   589  000940                     
   590                           ;main.c: 158:         temp_col=col_loc;
   591  000940  C028  F026         	movff	_col_loc,_temp_col
   592  000944                     
   593                           ;main.c: 159:         if(col_loc!=0xf0)
   594  000944  0EF0               	movlw	240
   595  000946  1828               	xorwf	_col_loc^0,w,c
   596  000948  B4D8               	btfsc	status,2,c
   597  00094A  EFA9  F004         	goto	u111
   598  00094E  EFAB  F004         	goto	u110
   599  000952                     u111:
   600  000952  EFBD  F004         	goto	l949
   601  000956                     u110:
   602  000956                     
   603                           ;main.c: 160:         {;main.c: 161:             rowloc=2;
   604  000956  0E02               	movlw	2
   605  000958  6E27               	movwf	_rowloc^0,c
   606                           
   607                           ;main.c: 162:             while(temp_col!=0xf0)
   608  00095A  EFB2  F004         	goto	l122
   609  00095E                     l947:
   610                           
   611                           ;main.c: 163:             {;main.c: 164:                 temp_col = PORTB & 0xf0;
   612  00095E  5081               	movf	129,w,c	;volatile
   613  000960  0BF0               	andlw	240
   614  000962  6E26               	movwf	_temp_col^0,c
   615  000964                     l122:
   616                           
   617                           ;main.c: 162:             while(temp_col!=0xf0)
   618  000964  0EF0               	movlw	240
   619  000966  1826               	xorwf	_temp_col^0,w,c
   620  000968  A4D8               	btfss	status,2,c
   621  00096A  EFB9  F004         	goto	u121
   622  00096E  EFBB  F004         	goto	u120
   623  000972                     u121:
   624  000972  EFAF  F004         	goto	l947
   625  000976                     u120:
   626  000976  EFDD  F004         	goto	l961
   627  00097A                     l949:
   628                           
   629                           ;main.c: 169:         LATB = 0xf7;
   630  00097A  0EF7               	movlw	247
   631  00097C  6E8A               	movwf	138,c	;volatile
   632  00097E                     
   633                           ;main.c: 170:         col_loc = PORTB & 0xf0;
   634  00097E  5081               	movf	129,w,c	;volatile
   635  000980  0BF0               	andlw	240
   636  000982  6E28               	movwf	_col_loc^0,c
   637  000984                     
   638                           ;main.c: 171:         temp_col=col_loc;
   639  000984  C028  F026         	movff	_col_loc,_temp_col
   640  000988                     
   641                           ;main.c: 172:         if(col_loc!=0xf0)
   642  000988  0EF0               	movlw	240
   643  00098A  1828               	xorwf	_col_loc^0,w,c
   644  00098C  B4D8               	btfsc	status,2,c
   645  00098E  EFCB  F004         	goto	u131
   646  000992  EFCD  F004         	goto	u130
   647  000996                     u131:
   648  000996  EF57  F004         	goto	l913
   649  00099A                     u130:
   650  00099A                     
   651                           ;main.c: 173:         {;main.c: 174:             rowloc=3;
   652  00099A  0E03               	movlw	3
   653  00099C  6E27               	movwf	_rowloc^0,c
   654                           
   655                           ;main.c: 175:             while(temp_col!=0xf0)
   656  00099E  EFD4  F004         	goto	l126
   657  0009A2                     l959:
   658                           
   659                           ;main.c: 176:             {;main.c: 177:                 temp_col = PORTB & 0xf0;
   660  0009A2  5081               	movf	129,w,c	;volatile
   661  0009A4  0BF0               	andlw	240
   662  0009A6  6E26               	movwf	_temp_col^0,c
   663  0009A8                     l126:
   664                           
   665                           ;main.c: 175:             while(temp_col!=0xf0)
   666  0009A8  0EF0               	movlw	240
   667  0009AA  1826               	xorwf	_temp_col^0,w,c
   668  0009AC  A4D8               	btfss	status,2,c
   669  0009AE  EFDB  F004         	goto	u141
   670  0009B2  EFDD  F004         	goto	u140
   671  0009B6                     u141:
   672  0009B6  EFD1  F004         	goto	l959
   673  0009BA                     u140:
   674  0009BA                     l961:
   675                           
   676                           ;main.c: 187:     {;main.c: 189:         if(col_loc==0xe0)
   677  0009BA  0EE0               	movlw	224
   678  0009BC  1828               	xorwf	_col_loc^0,w,c
   679  0009BE  A4D8               	btfss	status,2,c
   680  0009C0  EFE4  F004         	goto	u151
   681  0009C4  EFE6  F004         	goto	u150
   682  0009C8                     u151:
   683  0009C8  EFF1  F004         	goto	l969
   684  0009CC                     u150:
   685  0009CC                     
   686                           ;main.c: 190:         {;main.c: 191:              return keypad[rowloc][0];
   687  0009CC  5027               	movf	_rowloc^0,w,c
   688  0009CE  0D04               	mullw	4
   689  0009D0  0E01               	movlw	low _keypad
   690  0009D2  24F3               	addwf	243,w,c
   691  0009D4  6ED9               	movwf	fsr2l,c
   692  0009D6  0E00               	movlw	high _keypad
   693  0009D8  20F4               	addwfc	prodh,w,c
   694  0009DA  6EDA               	movwf	fsr2h,c
   695  0009DC  50DF               	movf	indf2,w,c
   696  0009DE  EF22  F005         	goto	l132
   697  0009E2                     l969:
   698                           
   699                           ;main.c: 194:             if(col_loc==0xd0)
   700  0009E2  0ED0               	movlw	208
   701  0009E4  1828               	xorwf	_col_loc^0,w,c
   702  0009E6  A4D8               	btfss	status,2,c
   703  0009E8  EFF8  F004         	goto	u161
   704  0009EC  EFFA  F004         	goto	u160
   705  0009F0                     u161:
   706  0009F0  EF05  F005         	goto	l977
   707  0009F4                     u160:
   708  0009F4                     
   709                           ;main.c: 195:         {;main.c: 196:             return keypad[rowloc][1];
   710  0009F4  5027               	movf	_rowloc^0,w,c
   711  0009F6  0D04               	mullw	4
   712  0009F8  0E02               	movlw	low (_keypad+1)
   713  0009FA  24F3               	addwf	243,w,c
   714  0009FC  6ED9               	movwf	fsr2l,c
   715  0009FE  0E00               	movlw	high (_keypad+1)
   716  000A00  20F4               	addwfc	prodh,w,c
   717  000A02  6EDA               	movwf	fsr2h,c
   718  000A04  50DF               	movf	indf2,w,c
   719  000A06  EF22  F005         	goto	l132
   720  000A0A                     l977:
   721                           
   722                           ;main.c: 199:             if(col_loc==0xb0)
   723  000A0A  0EB0               	movlw	176
   724  000A0C  1828               	xorwf	_col_loc^0,w,c
   725  000A0E  A4D8               	btfss	status,2,c
   726  000A10  EF0C  F005         	goto	u171
   727  000A14  EF0E  F005         	goto	u170
   728  000A18                     u171:
   729  000A18  EF19  F005         	goto	l985
   730  000A1C                     u170:
   731  000A1C                     
   732                           ;main.c: 200:         {;main.c: 201:             return keypad[rowloc][2];
   733  000A1C  5027               	movf	_rowloc^0,w,c
   734  000A1E  0D04               	mullw	4
   735  000A20  0E03               	movlw	low (_keypad+2)
   736  000A22  24F3               	addwf	243,w,c
   737  000A24  6ED9               	movwf	fsr2l,c
   738  000A26  0E00               	movlw	high (_keypad+2)
   739  000A28  20F4               	addwfc	prodh,w,c
   740  000A2A  6EDA               	movwf	fsr2h,c
   741  000A2C  50DF               	movf	indf2,w,c
   742  000A2E  EF22  F005         	goto	l132
   743  000A32                     l985:
   744                           
   745                           ;main.c: 205:         {;main.c: 206:             return keypad[rowloc][3];
   746  000A32  5027               	movf	_rowloc^0,w,c
   747  000A34  0D04               	mullw	4
   748  000A36  0E04               	movlw	low (_keypad+3)
   749  000A38  24F3               	addwf	243,w,c
   750  000A3A  6ED9               	movwf	fsr2l,c
   751  000A3C  0E00               	movlw	high (_keypad+3)
   752  000A3E  20F4               	addwfc	prodh,w,c
   753  000A40  6EDA               	movwf	fsr2h,c
   754  000A42  50DF               	movf	indf2,w,c
   755  000A44                     l132:
   756  000A44  0012               	return		;funcret
   757  000A46                     __end_of_keyfind:
   758                           	callstack 0
   759                           
   760 ;; *************** function _LCD_String_xy *****************
   761 ;; Defined at:
   762 ;;		line 60 in file "LCD.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  row             1    wreg     unsigned char 
   765 ;;  pos             1    4[COMRAM] unsigned char 
   766 ;;  msg             2    5[COMRAM] PTR const unsigned char 
   767 ;;		 -> STR_1(12), 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  row             1    7[COMRAM] unsigned char 
   770 ;;  location        1    8[COMRAM] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   780 ;;      Params:         3       0       0       0       0       0       0       0       0
   781 ;;      Locals:         2       0       0       0       0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0       0       0       0       0
   783 ;;      Totals:         5       0       0       0       0       0       0       0       0
   784 ;;Total ram usage:        5 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; Hardware stack levels required when called: 2
   787 ;; This function calls:
   788 ;;		_LCD_Command
   789 ;;		_LCD_String
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text2
   796  000B2E                     __ptext2:
   797                           	callstack 0
   798  000B2E                     _LCD_String_xy:
   799                           	callstack 28
   800                           
   801                           ;incstack = 0
   802                           ;LCD_String_xy@row stored from wreg
   803  000B2E  6E1D               	movwf	LCD_String_xy@row^0,c
   804  000B30                     
   805                           ;LCD.c: 63:     if(row<=1)
   806  000B30  0E02               	movlw	2
   807  000B32  601D               	cpfslt	LCD_String_xy@row^0,c
   808  000B34  EF9E  F005         	goto	u251
   809  000B38  EFA0  F005         	goto	u250
   810  000B3C                     u251:
   811  000B3C  EFA9  F005         	goto	l1071
   812  000B40                     u250:
   813  000B40                     
   814                           ;LCD.c: 64:     {;LCD.c: 65:         location = (0x80) | ((pos) & 0x0f);
   815  000B40  501A               	movf	LCD_String_xy@pos^0,w,c
   816  000B42  0B0F               	andlw	15
   817  000B44  0980               	iorlw	128
   818  000B46  6E1E               	movwf	LCD_String_xy@location^0,c
   819  000B48                     
   820                           ;LCD.c: 66:         LCD_Command(location);
   821  000B48  501E               	movf	LCD_String_xy@location^0,w,c
   822  000B4A  EC4B  F005         	call	_LCD_Command
   823                           
   824                           ;LCD.c: 67:     }
   825  000B4E  EFB0  F005         	goto	l1075
   826  000B52                     l1071:
   827                           
   828                           ;LCD.c: 69:     {;LCD.c: 70:         location = (0xC0) | ((pos) & 0x0f);
   829  000B52  501A               	movf	LCD_String_xy@pos^0,w,c
   830  000B54  0B0F               	andlw	15
   831  000B56  09C0               	iorlw	192
   832  000B58  6E1E               	movwf	LCD_String_xy@location^0,c
   833  000B5A                     
   834                           ;LCD.c: 71:         LCD_Command(location);
   835  000B5A  501E               	movf	LCD_String_xy@location^0,w,c
   836  000B5C  EC4B  F005         	call	_LCD_Command
   837  000B60                     l1075:
   838                           
   839                           ;LCD.c: 75:     LCD_String(msg);
   840  000B60  C01B  F018         	movff	LCD_String_xy@msg,LCD_String@msg
   841  000B64  C01C  F019         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
   842  000B68  ECD4  F005         	call	_LCD_String	;wreg free
   843  000B6C  0012               	return		;funcret
   844  000B6E                     __end_of_LCD_String_xy:
   845                           	callstack 0
   846                           
   847 ;; *************** function _LCD_String *****************
   848 ;; Defined at:
   849 ;;		line 50 in file "LCD.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  msg             2    2[COMRAM] PTR const unsigned char 
   852 ;;		 -> STR_1(12), 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   864 ;;      Params:         2       0       0       0       0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0       0       0
   866 ;;      Temps:          0       0       0       0       0       0       0       0       0
   867 ;;      Totals:         2       0       0       0       0       0       0       0       0
   868 ;;Total ram usage:        2 bytes
   869 ;; Hardware stack levels used: 1
   870 ;; Hardware stack levels required when called: 1
   871 ;; This function calls:
   872 ;;		_LCD_Char
   873 ;; This function is called by:
   874 ;;		_LCD_String_xy
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text3
   879  000BA8                     __ptext3:
   880                           	callstack 0
   881  000BA8                     _LCD_String:
   882                           	callstack 28
   883  000BA8                     
   884                           ;LCD.c: 50: void LCD_String(const char *msg);LCD.c: 51: {;LCD.c: 52:  while((*msg)!=0)
   885  000BA8  EFE0  F005         	goto	l1061
   886  000BAC                     l1057:
   887                           
   888                           ;LCD.c: 53:  {;LCD.c: 54:    LCD_Char(*msg);
   889  000BAC  C018  FFF6         	movff	LCD_String@msg,tblptrl
   890  000BB0  C019  FFF7         	movff	LCD_String@msg+1,tblptrh
   891  000BB4                     	if	0	;tblptru may be non-zero
   892  000BB4                     	endif
   893  000BB4                     	if	0	;tblptru may be non-zero
   894  000BB4                     	endif
   895  000BB4  0008               	tblrd		*
   896  000BB6  50F5               	movf	tablat,w,c
   897  000BB8  EC23  F005         	call	_LCD_Char
   898  000BBC                     
   899                           ;LCD.c: 55:    msg++;
   900  000BBC  4A18               	infsnz	LCD_String@msg^0,f,c
   901  000BBE  2A19               	incf	(LCD_String@msg+1)^0,f,c
   902  000BC0                     l1061:
   903                           
   904                           ;LCD.c: 52:  while((*msg)!=0)
   905  000BC0  C018  FFF6         	movff	LCD_String@msg,tblptrl
   906  000BC4  C019  FFF7         	movff	LCD_String@msg+1,tblptrh
   907  000BC8                     	if	0	;tblptru may be non-zero
   908  000BC8                     	endif
   909  000BC8                     	if	0	;tblptru may be non-zero
   910  000BC8                     	endif
   911  000BC8  0008               	tblrd		*
   912  000BCA  50F5               	movf	tablat,w,c
   913  000BCC  0900               	iorlw	0
   914  000BCE  A4D8               	btfss	status,2,c
   915  000BD0  EFEC  F005         	goto	u241
   916  000BD4  EFEE  F005         	goto	u240
   917  000BD8                     u241:
   918  000BD8  EFD6  F005         	goto	l1057
   919  000BDC                     u240:
   920  000BDC  0012               	return		;funcret
   921  000BDE                     __end_of_LCD_String:
   922                           	callstack 0
   923                           
   924 ;; *************** function _LCD_Char *****************
   925 ;; Defined at:
   926 ;;		line 36 in file "LCD.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  dat             1    wreg     unsigned char 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  dat             1    1[COMRAM] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   940 ;;      Params:         0       0       0       0       0       0       0       0       0
   941 ;;      Locals:         1       0       0       0       0       0       0       0       0
   942 ;;      Temps:          1       0       0       0       0       0       0       0       0
   943 ;;      Totals:         2       0       0       0       0       0       0       0       0
   944 ;;Total ram usage:        2 bytes
   945 ;; Hardware stack levels used: 1
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_LCD_String
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text4
   955  000A46                     __ptext4:
   956                           	callstack 0
   957  000A46                     _LCD_Char:
   958                           	callstack 28
   959                           
   960                           ;incstack = 0
   961                           ;LCD_Char@dat stored from wreg
   962  000A46  6E17               	movwf	LCD_Char@dat^0,c
   963  000A48                     
   964                           ;LCD.c: 36: void LCD_Char(unsigned char dat);LCD.c: 37: {;LCD.c: 38:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
   965  000A48  C017  F016         	movff	LCD_Char@dat,??_LCD_Char
   966  000A4C  0EF0               	movlw	240
   967  000A4E  1616               	andwf	??_LCD_Char^0,f,c
   968  000A50  508C               	movf	140,w,c	;volatile
   969  000A52  0B0F               	andlw	15
   970  000A54  1016               	iorwf	??_LCD_Char^0,w,c
   971  000A56  6E8C               	movwf	140,c	;volatile
   972  000A58                     
   973                           ;LCD.c: 39:  LATD0 = 1;
   974  000A58  808C               	bsf	3980,0,c	;volatile
   975  000A5A                     
   976                           ;LCD.c: 40:  LATD1 = 1;
   977  000A5A  828C               	bsf	3980,1,c	;volatile
   978  000A5C                     
   979                           ;LCD.c: 41:  __nop();
   980  000A5C  F000               	nop	
   981  000A5E                     
   982                           ;LCD.c: 42:  LATD1 = 0;
   983  000A5E  928C               	bcf	3980,1,c	;volatile
   984  000A60                     
   985                           ;LCD.c: 43:  _delay((unsigned long)((1)*(8000000/4000.0)));
   986  000A60  0E03               	movlw	3
   987  000A62  6E16               	movwf	??_LCD_Char^0,c
   988  000A64  0E98               	movlw	152
   989  000A66                     u287:
   990  000A66  2EE8               	decfsz	wreg,f,c
   991  000A68  D7FE               	bra	u287
   992  000A6A  2E16               	decfsz	??_LCD_Char^0,f,c
   993  000A6C  D7FC               	bra	u287
   994  000A6E                     
   995                           ;LCD.c: 44:     LATD = (LATD & 0x0f) | (dat<<4);
   996  000A6E  C017  F016         	movff	LCD_Char@dat,??_LCD_Char
   997  000A72  3A16               	swapf	??_LCD_Char^0,f,c
   998  000A74  0EF0               	movlw	240
   999  000A76  1616               	andwf	??_LCD_Char^0,f,c
  1000  000A78  508C               	movf	140,w,c	;volatile
  1001  000A7A  0B0F               	andlw	15
  1002  000A7C  1016               	iorwf	??_LCD_Char^0,w,c
  1003  000A7E  6E8C               	movwf	140,c	;volatile
  1004  000A80                     
  1005                           ;LCD.c: 45:  LATD1 = 1;
  1006  000A80  828C               	bsf	3980,1,c	;volatile
  1007  000A82                     
  1008                           ;LCD.c: 46:  __nop();
  1009  000A82  F000               	nop	
  1010  000A84                     
  1011                           ;LCD.c: 47:  LATD1 = 0;
  1012  000A84  928C               	bcf	3980,1,c	;volatile
  1013                           
  1014                           ;LCD.c: 48:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1015  000A86  0E08               	movlw	8
  1016  000A88  6E16               	movwf	??_LCD_Char^0,c
  1017  000A8A  0ECA               	movlw	202
  1018  000A8C                     u297:
  1019  000A8C  2EE8               	decfsz	wreg,f,c
  1020  000A8E  D7FE               	bra	u297
  1021  000A90  2E16               	decfsz	??_LCD_Char^0,f,c
  1022  000A92  D7FC               	bra	u297
  1023  000A94  0012               	return		;funcret
  1024  000A96                     __end_of_LCD_Char:
  1025                           	callstack 0
  1026                           
  1027 ;; *************** function _LCD_Init *****************
  1028 ;; Defined at:
  1029 ;;		line 5 in file "LCD.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1045 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1046 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1047 ;;Total ram usage:        1 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; Hardware stack levels required when called: 1
  1050 ;; This function calls:
  1051 ;;		_LCD_Command
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text5
  1058  000BDE                     __ptext5:
  1059                           	callstack 0
  1060  000BDE                     _LCD_Init:
  1061                           	callstack 29
  1062  000BDE                     
  1063                           ;LCD.c: 7:     TRISD = 0;
  1064  000BDE  0E00               	movlw	0
  1065  000BE0  6E95               	movwf	149,c	;volatile
  1066  000BE2                     
  1067                           ;LCD.c: 8:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1068  000BE2  0E27               	movlw	39
  1069  000BE4  6E18               	movwf	??_LCD_Init^0,c
  1070  000BE6  0EF5               	movlw	245
  1071  000BE8                     u307:
  1072  000BE8  2EE8               	decfsz	wreg,f,c
  1073  000BEA  D7FE               	bra	u307
  1074  000BEC  2E18               	decfsz	??_LCD_Init^0,f,c
  1075  000BEE  D7FC               	bra	u307
  1076  000BF0  F000               	nop	
  1077  000BF2                     
  1078                           ;LCD.c: 9:     LCD_Command(0x02);
  1079  000BF2  0E02               	movlw	2
  1080  000BF4  EC4B  F005         	call	_LCD_Command
  1081  000BF8                     
  1082                           ;LCD.c: 11:     LCD_Command(0x28);
  1083  000BF8  0E28               	movlw	40
  1084  000BFA  EC4B  F005         	call	_LCD_Command
  1085  000BFE                     
  1086                           ;LCD.c: 13:  LCD_Command(0x01);
  1087  000BFE  0E01               	movlw	1
  1088  000C00  EC4B  F005         	call	_LCD_Command
  1089  000C04                     
  1090                           ;LCD.c: 14:     LCD_Command(0x0c);
  1091  000C04  0E0C               	movlw	12
  1092  000C06  EC4B  F005         	call	_LCD_Command
  1093  000C0A                     
  1094                           ;LCD.c: 15:  LCD_Command(0x06);
  1095  000C0A  0E06               	movlw	6
  1096  000C0C  EC4B  F005         	call	_LCD_Command
  1097  000C10  0012               	return		;funcret
  1098  000C12                     __end_of_LCD_Init:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _LCD_Command *****************
  1102 ;; Defined at:
  1103 ;;		line 18 in file "LCD.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  cmd             1    wreg     unsigned char 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  cmd             1    1[COMRAM] unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0
  1118 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1119 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1120 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1121 ;;Total ram usage:        2 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_LCD_Init
  1127 ;;		_LCD_String_xy
  1128 ;;		_main
  1129 ;;		_LCD_Clear
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text6
  1134  000A96                     __ptext6:
  1135                           	callstack 0
  1136  000A96                     _LCD_Command:
  1137                           	callstack 29
  1138                           
  1139                           ;incstack = 0
  1140                           ;LCD_Command@cmd stored from wreg
  1141  000A96  6E17               	movwf	LCD_Command@cmd^0,c
  1142  000A98                     
  1143                           ;LCD.c: 18: void LCD_Command(unsigned char cmd );LCD.c: 19: {;LCD.c: 20:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  1144  000A98  C017  F016         	movff	LCD_Command@cmd,??_LCD_Command
  1145  000A9C  0EF0               	movlw	240
  1146  000A9E  1616               	andwf	??_LCD_Command^0,f,c
  1147  000AA0  508C               	movf	140,w,c	;volatile
  1148  000AA2  0B0F               	andlw	15
  1149  000AA4  1016               	iorwf	??_LCD_Command^0,w,c
  1150  000AA6  6E8C               	movwf	140,c	;volatile
  1151  000AA8                     
  1152                           ;LCD.c: 21:  LATD0 = 0;
  1153  000AA8  908C               	bcf	3980,0,c	;volatile
  1154  000AAA                     
  1155                           ;LCD.c: 22:  LATD1 = 1;
  1156  000AAA  828C               	bsf	3980,1,c	;volatile
  1157  000AAC                     
  1158                           ;LCD.c: 23:  __nop();
  1159  000AAC  F000               	nop	
  1160  000AAE                     
  1161                           ;LCD.c: 24:  LATD1 = 0;
  1162  000AAE  928C               	bcf	3980,1,c	;volatile
  1163  000AB0                     
  1164                           ;LCD.c: 25:  _delay((unsigned long)((1)*(8000000/4000.0)));
  1165  000AB0  0E03               	movlw	3
  1166  000AB2  6E16               	movwf	??_LCD_Command^0,c
  1167  000AB4  0E98               	movlw	152
  1168  000AB6                     u317:
  1169  000AB6  2EE8               	decfsz	wreg,f,c
  1170  000AB8  D7FE               	bra	u317
  1171  000ABA  2E16               	decfsz	??_LCD_Command^0,f,c
  1172  000ABC  D7FC               	bra	u317
  1173  000ABE                     
  1174                           ;LCD.c: 26:     LATD = (LATD & 0x0f) | (cmd<<4);
  1175  000ABE  C017  F016         	movff	LCD_Command@cmd,??_LCD_Command
  1176  000AC2  3A16               	swapf	??_LCD_Command^0,f,c
  1177  000AC4  0EF0               	movlw	240
  1178  000AC6  1616               	andwf	??_LCD_Command^0,f,c
  1179  000AC8  508C               	movf	140,w,c	;volatile
  1180  000ACA  0B0F               	andlw	15
  1181  000ACC  1016               	iorwf	??_LCD_Command^0,w,c
  1182  000ACE  6E8C               	movwf	140,c	;volatile
  1183  000AD0                     
  1184                           ;LCD.c: 27:  LATD1 = 1;
  1185  000AD0  828C               	bsf	3980,1,c	;volatile
  1186  000AD2                     
  1187                           ;LCD.c: 28:  __nop();
  1188  000AD2  F000               	nop	
  1189  000AD4                     
  1190                           ;LCD.c: 29:  LATD1 = 0;
  1191  000AD4  928C               	bcf	3980,1,c	;volatile
  1192                           
  1193                           ;LCD.c: 30:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1194  000AD6  0E08               	movlw	8
  1195  000AD8  6E16               	movwf	??_LCD_Command^0,c
  1196  000ADA  0ECA               	movlw	202
  1197  000ADC                     u327:
  1198  000ADC  2EE8               	decfsz	wreg,f,c
  1199  000ADE  D7FE               	bra	u327
  1200  000AE0  2E16               	decfsz	??_LCD_Command^0,f,c
  1201  000AE2  D7FC               	bra	u327
  1202  000AE4  0012               	return		;funcret
  1203  000AE6                     __end_of_LCD_Command:
  1204                           	callstack 0
  1205                           
  1206                           	psect	rparam
  1207  0000                     
  1208                           	psect	idloc
  1209                           
  1210                           ;Config register IDLOC0 @ 0x200000
  1211                           ;	unspecified, using default values
  1212  200000                     	org	2097152
  1213  200000  FF                 	db	255
  1214                           
  1215                           ;Config register IDLOC1 @ 0x200001
  1216                           ;	unspecified, using default values
  1217  200001                     	org	2097153
  1218  200001  FF                 	db	255
  1219                           
  1220                           ;Config register IDLOC2 @ 0x200002
  1221                           ;	unspecified, using default values
  1222  200002                     	org	2097154
  1223  200002  FF                 	db	255
  1224                           
  1225                           ;Config register IDLOC3 @ 0x200003
  1226                           ;	unspecified, using default values
  1227  200003                     	org	2097155
  1228  200003  FF                 	db	255
  1229                           
  1230                           ;Config register IDLOC4 @ 0x200004
  1231                           ;	unspecified, using default values
  1232  200004                     	org	2097156
  1233  200004  FF                 	db	255
  1234                           
  1235                           ;Config register IDLOC5 @ 0x200005
  1236                           ;	unspecified, using default values
  1237  200005                     	org	2097157
  1238  200005  FF                 	db	255
  1239                           
  1240                           ;Config register IDLOC6 @ 0x200006
  1241                           ;	unspecified, using default values
  1242  200006                     	org	2097158
  1243  200006  FF                 	db	255
  1244                           
  1245                           ;Config register IDLOC7 @ 0x200007
  1246                           ;	unspecified, using default values
  1247  200007                     	org	2097159
  1248  200007  FF                 	db	255
  1249                           
  1250                           	psect	config
  1251                           
  1252                           ;Config register CONFIG1L @ 0x300000
  1253                           ;	PLL Prescaler Selection bits
  1254                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1255                           ;	System Clock Postscaler Selection bits
  1256                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1257                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1258                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1259  300000                     	org	3145728
  1260  300000  00                 	db	0
  1261                           
  1262                           ;Config register CONFIG1H @ 0x300001
  1263                           ;	Oscillator Selection bits
  1264                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1265                           ;	Fail-Safe Clock Monitor Enable bit
  1266                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1267                           ;	Internal/External Oscillator Switchover bit
  1268                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1269  300001                     	org	3145729
  1270  300001  09                 	db	9
  1271                           
  1272                           ;Config register CONFIG2L @ 0x300002
  1273                           ;	Power-up Timer Enable bit
  1274                           ;	PWRT = OFF, PWRT disabled
  1275                           ;	Brown-out Reset Enable bits
  1276                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1277                           ;	Brown-out Reset Voltage bits
  1278                           ;	BORV = 3, Minimum setting 2.05V
  1279                           ;	USB Voltage Regulator Enable bit
  1280                           ;	VREGEN = OFF, USB voltage regulator disabled
  1281  300002                     	org	3145730
  1282  300002  1F                 	db	31
  1283                           
  1284                           ;Config register CONFIG2H @ 0x300003
  1285                           ;	Watchdog Timer Enable bit
  1286                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1287                           ;	Watchdog Timer Postscale Select bits
  1288                           ;	WDTPS = 32768, 1:32768
  1289  300003                     	org	3145731
  1290  300003  1E                 	db	30
  1291                           
  1292                           ; Padding undefined space
  1293  300004                     	org	3145732
  1294  300004  FF                 	db	255
  1295                           
  1296                           ;Config register CONFIG3H @ 0x300005
  1297                           ;	CCP2 MUX bit
  1298                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1299                           ;	PORTB A/D Enable bit
  1300                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1301                           ;	Low-Power Timer 1 Oscillator Enable bit
  1302                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1303                           ;	MCLR Pin Enable bit
  1304                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1305  300005                     	org	3145733
  1306  300005  81                 	db	129
  1307                           
  1308                           ;Config register CONFIG4L @ 0x300006
  1309                           ;	Stack Full/Underflow Reset Enable bit
  1310                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1311                           ;	Single-Supply ICSP Enable bit
  1312                           ;	LVP = OFF, Single-Supply ICSP disabled
  1313                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1314                           ;	ICPRT = OFF, ICPORT disabled
  1315                           ;	Extended Instruction Set Enable bit
  1316                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1317                           ;	Background Debugger Enable bit
  1318                           ;	DEBUG = 0x1, unprogrammed default
  1319  300006                     	org	3145734
  1320  300006  81                 	db	129
  1321                           
  1322                           ; Padding undefined space
  1323  300007                     	org	3145735
  1324  300007  FF                 	db	255
  1325                           
  1326                           ;Config register CONFIG5L @ 0x300008
  1327                           ;	Code Protection bit
  1328                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1329                           ;	Code Protection bit
  1330                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1331                           ;	Code Protection bit
  1332                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1333                           ;	Code Protection bit
  1334                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1335  300008                     	org	3145736
  1336  300008  0F                 	db	15
  1337                           
  1338                           ;Config register CONFIG5H @ 0x300009
  1339                           ;	Boot Block Code Protection bit
  1340                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1341                           ;	Data EEPROM Code Protection bit
  1342                           ;	CPD = OFF, Data EEPROM is not code-protected
  1343  300009                     	org	3145737
  1344  300009  C0                 	db	192
  1345                           
  1346                           ;Config register CONFIG6L @ 0x30000A
  1347                           ;	Write Protection bit
  1348                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1349                           ;	Write Protection bit
  1350                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1351                           ;	Write Protection bit
  1352                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1353                           ;	Write Protection bit
  1354                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1355  30000A                     	org	3145738
  1356  30000A  0F                 	db	15
  1357                           
  1358                           ;Config register CONFIG6H @ 0x30000B
  1359                           ;	Configuration Register Write Protection bit
  1360                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1361                           ;	Boot Block Write Protection bit
  1362                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1363                           ;	Data EEPROM Write Protection bit
  1364                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1365  30000B                     	org	3145739
  1366  30000B  E0                 	db	224
  1367                           
  1368                           ;Config register CONFIG7L @ 0x30000C
  1369                           ;	Table Read Protection bit
  1370                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1371                           ;	Table Read Protection bit
  1372                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1373                           ;	Table Read Protection bit
  1374                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1375                           ;	Table Read Protection bit
  1376                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1377  30000C                     	org	3145740
  1378  30000C  0F                 	db	15
  1379                           
  1380                           ;Config register CONFIG7H @ 0x30000D
  1381                           ;	Boot Block Table Read Protection bit
  1382                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1383  30000D                     	org	3145741
  1384  30000D  40                 	db	64
  1385                           tosu	equ	0xFFF
  1386                           tosh	equ	0xFFE
  1387                           tosl	equ	0xFFD
  1388                           stkptr	equ	0xFFC
  1389                           pclatu	equ	0xFFB
  1390                           pclath	equ	0xFFA
  1391                           pcl	equ	0xFF9
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           prodh	equ	0xFF4
  1397                           prodl	equ	0xFF3
  1398                           indf0	equ	0xFEF
  1399                           postinc0	equ	0xFEE
  1400                           postdec0	equ	0xFED
  1401                           preinc0	equ	0xFEC
  1402                           plusw0	equ	0xFEB
  1403                           fsr0h	equ	0xFEA
  1404                           fsr0l	equ	0xFE9
  1405                           wreg	equ	0xFE8
  1406                           indf1	equ	0xFE7
  1407                           postinc1	equ	0xFE6
  1408                           postdec1	equ	0xFE5
  1409                           preinc1	equ	0xFE4
  1410                           plusw1	equ	0xFE3
  1411                           fsr1h	equ	0xFE2
  1412                           fsr1l	equ	0xFE1
  1413                           bsr	equ	0xFE0
  1414                           indf2	equ	0xFDF
  1415                           postinc2	equ	0xFDE
  1416                           postdec2	equ	0xFDD
  1417                           preinc2	equ	0xFDC
  1418                           plusw2	equ	0xFDB
  1419                           fsr2h	equ	0xFDA
  1420                           fsr2l	equ	0xFD9
  1421                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    17
    Data        21
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     581
                                              9 COMRAM     1     1      0
                           _LCD_Char
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (1) _keyfind                                              2     2      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     468
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     151
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _keyfind

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      28       1       42.1%
BITBIGSFRhl         3D      0       0      22        0.0%
BITBIGSFRllll       21      0       0      28        0.0%
BITBIGSFRhhl        1D      0       0      21        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRllhl        6      0       0      26        0.0%
BITBIGSFRlhl         6      0       0      24        0.0%
BITBIGSFRlllh        1      0       0      27        0.0%
BITBIGSFRllhh        1      0       0      25        0.0%
BITBIGSFRlhh         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28      29        0.0%
DATA                 0      0      28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 10 14:08:13 2022

                 ?_LCD_Command 0016                             l20 0AE4                             l23 0A94  
                           l17 0C10                             l34 0B6C                             l29 0BDC  
                           u30 0840                             u31 083C                             u40 0858  
                           u41 0854                             u50 0882                             u51 087E  
                           u60 089A                             u61 0896                             u70 08CE  
                           u71 08CA                             u80 08EE                             u81 08EA  
                           u90 0912                             u91 090E                    ?_LCD_String 0018  
                          l113 08DC                            l122 0964                            l132 0A44  
                          l126 09A8                            l118 0920                            l821 0A5C  
                          l901 0866                            l831 0A82                            l823 0A5E  
                          l815 0A48                            l911 08A8                            l903 086A  
                          l841 0AAC                            l833 0A84                            l825 0A60  
                          l817 0A58                            l921 08CE                            l913 08AE  
                          l905 0870                            l851 0AD2                            l843 0AAE  
                          l835 0A98                            l827 0A6E                            l819 0A5A  
                          l931 0900                            l923 08D6                            l915 08B2  
                          l907 0882                            l853 0AD4                            l845 0AB0  
                          l837 0AA8                            l829 0A80                            l941 0940  
                          l933 0912                            l925 08F2                            l917 08B8  
                          l909 089A                            l847 0ABE                            l839 0AAA  
                          l871 0BFE                            l863 0BDE                            l951 097E  
                          l943 0944                            l935 091A                            l927 08F6  
                          l919 08BC                            l849 0AD0                            l873 0C04  
                          l865 0BE2                            l953 0984                            l945 0956  
                          l937 0936                            l929 08FC                            l961 09BA  
                          l875 0C0A                            l867 0BF2                            l971 09F4  
                          l963 09CC                            l955 0988                            l947 095E  
                          l939 093A                            l891 0820                            l869 0BF8  
                          l957 099A                            l949 097A                            l893 0828  
                          l959 09A2                            l895 082E                            l985 0A32  
                          l977 0A0A                            l969 09E2                            l897 0840  
                          l979 0A1C                            l899 0858                            u100 0932  
                          u101 092E                            u110 0956                            u111 0952  
                          u120 0976                            u121 0972                            u130 099A  
                          u131 0996                            u140 09BA                            u141 09B6  
                          u150 09CC                            u151 09C8                            u240 0BDC  
                          u160 09F4                            u241 0BD8                            u161 09F0  
                          u250 0B40                            u170 0A1C                            u307 0BE8  
                          u251 0B3C                            u171 0A18                            u317 0AB6  
                          u327 0ADC                            u267 085E                            u277 08A0  
                          u287 0A66                            u297 0A8C                            _idx 0025  
                          prod 000FF3                            wreg 000FE8                    LCD_Char@dat 0017  
                         l1061 0BC0                           l1055 0BA8                           l1071 0B52  
                         l1063 0B30                           l1057 0BAC                           l1073 0B5A  
                         l1065 0B30                           l1081 0AEC                           l1059 0BBC  
                         l1075 0B60                           l1067 0B40                           l1091 0B14  
                         l1083 0AF0                           l1069 0B48                           l1093 0B24  
                         l1085 0B02                           l1077 0AE6                           l1087 0B08  
                         l1079 0AEA                           l1089 0B0E  __end_ofKeypad_Key_Press@F3225 0812  
                         STR_1 0812                           _LATB 000F8A                           _LATD 000F8C  
                         _RBPU 007F8F                           _main 0AE6                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           prodl 000FF3  
                         start 0000                  _LCD_String_xy 0B2E                   ___param_bank 000000  
             __end_of_LCD_Char 0A96               __end_of_LCD_Init 0C12                          ?_main 0016  
                        _LATD0 007C60                          _LATD1 007C61                          _PORTB 000F81  
                        _PORTD 000F83                          _TRISB 000F93                          _TRISD 000F95  
              __end_of_keyfind 0A46                          tablat 000FF5                          status 000FD8  
               ?_LCD_String_xy 001A                __initialization 0B6E                   __end_of_main 0B2E  
                       ??_main 001F                  __activetblptr 000001               LCD_String_xy@msg 001B  
             LCD_String_xy@pos 001A               LCD_String_xy@row 001D                         _OSCCON 000FD3  
                       _keypad 0001                         clear_0 0B94                         isa$std 000001  
                       _rowloc 0027                   __pdataCOMRAM 0001                      ??_keyfind 0016  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                      ?_LCD_Char 0016                     __accesstop 0060  
      __end_of__initialization 0B9A                      ?_LCD_Init 0016                ??_LCD_String_xy 001D  
                ___rparam_used 000001                 __pcstackCOMRAM 0016                   ??_LCD_String 001A  
                   ??_LCD_Char 0016                     ??_LCD_Init 0018             __end_of_LCD_String 0BDE  
        Keypad_Key_Press@F3225 0801                  LCD_String@msg 0018                        __Hparam 0000  
                      __Lparam 0000                   __psmallconst 0800                        __pcinit 0B6E  
                      __ramtop 0800                        __ptext0 0AE6                        __ptext1 0820  
                      __ptext2 0B2E                        __ptext3 0BA8                        __ptext4 0A46  
                      __ptext5 0BDE                        __ptext6 0A96                        _col_loc 0028  
                      _keyfind 0820                        main@key 001F           end_of_initialization 0B9A  
               LCD_Command@cmd 0017                        postdec1 000FE5                        postinc0 000FEE  
                    _PORTDbits 000F83                  ??_LCD_Command 0016                  __pidataCOMRAM 0C12  
          start_initialization 0B6E          __end_of_LCD_String_xy 0B6E            __end_of_LCD_Command 0AE6  
                  __pbssCOMRAM 0020                    __smallconst 0800                       ?_keyfind 0016  
        LCD_String_xy@location 001E                       _LCD_Char 0A46                       _LCD_Init 0BDE  
                    _pass_user 0020                    _LCD_Command 0A96                      copy_data0 0B82  
                     __Hrparam 0000                       __Lrparam 0000                   __Lsmallconst 0800  
                     _password 0011                       _temp_col 0026                       isa$xinst 000000  
                   _LCD_String 0BA8  
